---
- name: create /tmp/datamover_url
  template:
     src: datamover_url
     dest: /tmp/datamover_url
   
- block: 
  - name: create yum repo file in if  ansible_distribution is Centos/RHEL/SLES
    template:
       src: trilio.repo
       dest: "{{trilio_yum_repo_file_path}}"

  - name: install tvault-datamover-api package
    yum:
       update_cache: yes
       name: dmapi
       state: present
 
  - name: change permission of datamover log file 
    file: path={{datamover_log_dir}} owner={{TVAULT_CONTEGO_EXT_USER}} group={{TVAULT_CONTEGO_EXT_GROUP}} state=directory recurse=yes

  - name: find out path of dmapi bianry 
    shell: which dmapi-api
    register: dmapi_bin

  - name: execute populate-conf binary
    shell: populate-conf

  - name: create tvault-datamover-api service in systemd if ansible_distribution is Centos/RHEL/SLES
    template:
       src: tvault_datamover_service.j2
       dest: "{{datamover_service_file_path}}"
  when: >
        (ansible_distribution_major_version=="7" and ansible_distribution== centos) or
        (ansible_distribution_major_version=="7" and ansible_distribution=="RedHat") or 
        (ansible_distribution == SLES) or 
        (ansible_distribution == suse) 

- block:
  - name: create apt repo file in if  ansible_distribution is ubuntu16
    template:
       src: trilio.list
       dest: "{{trilio_apt_repo_file_path}}"

  - name: install tvault-datamover-api package
    apt:
       name: dmapi
       state: present
       allow_unauthenticated: yes

  - name: change permission of datamover log file
    file: path={{datamover_log_dir}} owner={{TVAULT_CONTEGO_EXT_USER}} group={{TVAULT_CONTEGO_EXT_GROUP}} state=directory recurse=yes

  - name: find out path of dmapi bianry
    shell: which dmapi-api
    register: dmapi_bin

  - name: execute populate-conf binary
    shell: populate-conf

  - name: create tvault-datamover-api service in systemd if ansible_distribution is Centos/RHEL/SLES
    template:
       src: tvault_datamover_service.j2
       dest: "{{datamover_service_file_path}}"
  when: ansible_distribution=="Ubuntu" and (ansible_lsb.codename == xenial or ansible_lsb.codename == willy)


- block:
  - name: create apt repo file in if  ansible_distribution is ubuntu14
    template:
       src: trilio.list
       dest: "{{trilio_apt_repo_file_path}}"

  - name: install tvault-datamover-api package
    apt:
       name: dmapi
       state: present
       allow_unauthenticated: yes

  - name: change permission of datamover log file
    file: path={{datamover_log_dir}} owner={{TVAULT_CONTEGO_EXT_USER}} group={{TVAULT_CONTEGO_EXT_GROUP}} state=directory recurse=yes

  - name: find out path of dmapi bianry
    shell: which dmapi-api
    register: dmapi_bin

  - name: execute populate-conf binary
    shell: populate-conf

  - name: create tvault-datamover-api service in systemd if ansible_distribution is uubuntu16
    template:
       src: datamover_service_debian.j2
       dest: "{{datamover_service_debian_path}}"
  when: ansible_distribution=="Ubuntu" and (ansible_lsb.codename != xenial and ansible_lsb.codename != willy)

- name: enable and daemon reload tvault-datamover-api service
  block:
    - shell: systemctl daemon-reload
    - name: enable tvault-datamover-api service and reload it
      service: name=tvault-datamover-api  state=restarted enabled=yes
  when: >
       (ansible_distribution_major_version=="7" and ansible_distribution== centos) or
       (ansible_distribution_major_version=="7" and ansible_distribution=="RedHat") or
       (ansible_distribution== SLES) or (ansible_distribution== suse) or
       (ansible_distribution=="Ubuntu" and (ansible_lsb.codename == xenial or ansible_lsb.codename == willy))
 
