---
- name: Setup trilio yum repo for queens
  template:
     src: trilio.repo
     dest: "{{trilio_yum_repo_file_path}}"

- name: install tvault horizon plugin packages
  yum:
     update_cache: yes
     name:
        - tvault-contego
     state: present


- name: create virtenv dir(/home/tvault) if it is not exist
  file: path={{TVAULT_CONTEGO_VIRTENV}} state=directory mode=765 owner="{{TVAULT_CONTEGO_EXT_USER}}" group="{{TVAULT_CONTEGO_EXT_GROUP}}"

- name: check if /home/tvault/.venv directory exist or not
  stat: path={{TVAULT_CONTEGO_VIRTENV_PATH}}
  register: venv_dir

- debug: msg="print true if  virtual env dir exists:{{venv_dir.stat.exists}}" verbosity={{verbosity_level}}

- name: download virtual environment tar bundle from applainace if distribution is RedHat
  get_url: url="http://{{IP_ADDRESS}}:{{PORT_NO}}/packages/queens_redhat/tvault-contego-virtenv.tar.gz" dest="{{TVAULT_CONTEGO_VIRTENV}}"
  when: >
        (ansible_distribution_major_version=="7" and ansible_distribution== centos) or
        (ansible_distribution_major_version=="7" and ansible_distribution== redhat) or
        (ansible_distribution == SLES) or
        (ansible_distribution== suse)
  
- name: download virtual environment tar bundle from applaince if distribution is Ubuntu
  get_url: url="http://{{IP_ADDRESS}}:{{PORT_NO}}/packages/queens_ubuntu/tvault-contego-virtenv.tar.gz" dest="{{TVAULT_CONTEGO_VIRTENV}}"
  when: ansible_distribution== ubuntu
  
- name: remove existing .virtenv directory
  file: path={{TVAULT_CONTEGO_VIRTENV_PATH}} state=absent

- name:  Untar virtual environment bundle
  unarchive: src="{{TVAULT_CONTEGO_VIRTENV}}/tvault-contego-virtenv.tar.gz" dest="{{TVAULT_CONTEGO_VIRTENV}}" remote_src=yes

- name: set cryptography if openstack release is mitaka
  shell:   |
            python -c "import cryptography;print cryptography.__path__[0]"
            python -c "import Crypto;print Crypto.__path__[0]"
  register: cryptography_mitaka
  when: OPEN_STACK_RELEASE == mitaka

- name: set cryptography if openstack release is newton
  shell:   |
            python -c "import cryptography;print cryptography.__path__[0]"
            python -c "import libvirtmod;print libvirtmod.__file__"
            python -c "import cffi;print cffi.__path__[0]"
            python -c "import _cffi_backend;print _cffi_backend.__file__"
  register: cryptography
  when: OPEN_STACK_RELEASE == newton

- debug: msg="cryptography_path={{cryptography_mitaka}}"  verbosity={{verbosity_level}}
- debug: msg="cryptography_path={{cryptography}}"  verbosity={{verbosity_level}}

- block:
    - name: copy set_virenv_premitaka.sh to destination host
      template:
         src: set_virt_mitaka.j2
         dest: "{{virtenv_mitaka_script_path}}"

    - file: path="{{virtenv_mitaka_script_path}}" mode=765

    - name: activate the virtual environment and set cryptography symlinks when openstack_release is newton
      shell: '{{virtenv_mitaka_script_path}}'
      register: tvault_contego_version_installed
  when: OPEN_STACK_RELEASE == mitaka

- block:
    - name: copy set_virenv_premitaka.sh to destination host
      template:
         src: set_virt_premitaka.j2
         dest: "{{virtenv_premitaka_script_path}}"

    - file: path="{{virtenv_premitaka_script_path}}" mode=765

    - name: activate the virtual environment and set cryptography symlinks when openstack_release is newton
      shell: '{{virtenv_premitaka_script_path}}'
      register: tvault_contego_version_installed
  when: OPEN_STACK_RELEASE == premitaka or OPEN_STACK_RELEASE == queens

- block:
    - name: copy set_virtenv_newton.sh to destination host
      template:
         src: set_virt_newton.j2
         dest: "{{virtenv_newton_script_path}}"

    - file: path="{{virtenv_newton_script_path}}" mode=765 

    - name: activate the virtual environment and set cryptography symlinks when openstack_release is newton
      shell: '{{virtenv_newton_script_path}}'
      register: tvault_contego_version_installed
  when: OPEN_STACK_RELEASE == newton

- name: get tvault contego binary path 
  shell: which tvault-contego
  register: tvault_contego_bin_path

- name: get tvault contego driver file path
  shell: python -c "import contego.nova.extension.driver; print contego.nova.extension.driver.__path__[0]"
  register: contego_driver_path

- name: append tvault object store s3vaultfuse file path
  set_fact:
     s3_fuse_file: "{{contego_driver_path.stdout}}/s3vaultfuse.py"
  
- debug: msg="tvault_contego_version_installed:{{tvault_contego_version_installed}}" verbosity={{verbosity_level}}

- name: change virtenv dir(/home/tvault) users to nova
  file: path={{TVAULT_CONTEGO_VIRTENV}} mode=765 recurse=yes owner="{{TVAULT_CONTEGO_EXT_USER}}" group="{{TVAULT_CONTEGO_EXT_GROUP}}"

