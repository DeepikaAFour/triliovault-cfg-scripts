## User needs to create endpoint map for trilio

## Become root
sudo bash

## Append trilio endpoint data to endpoint_data.yaml
cat trilio_endpoint_data.yaml >> /usr/share/openstack-tripleo-heat-templates/network/endpoints/endpoint_data.yaml
cd /usr/share/openstack-tripleo-heat-templates/network/endpoints/

# If it's RHEL7, use python 2
python build_endpoint_map.py

# If it's RHEL8 use python3
python3 build_endpoint_map.py

# Make sure,  file /usr/share/openstack-tripleo-heat-templates/network/endpoints/endpoint_map.yaml got Trilio endpoint data added.
# You can search for 'Trilio' in this file. You will get entries like following

      TrilioDatamoverAdmin: {protocol: http, port: '8784', host: IP_ADDRESS}
      TrilioDatamoverInternal: {protocol: http, port: '8784', host: IP_ADDRESS}
      TrilioDatamoverPublic: {protocol: http, port: '8784', host: IP_ADDRESS}

## Also, if you are using any endpoints map file to 'overcloud deploy' command like for public ssl, 
## user need to use '/usr/share/openstack-tripleo-heat-templates/environments/ssl/tls-endpoints-public-ip.yaml' file.
## In that case, user needs to add Trilio endpoint map entries to this file.
## In public endpoint on ssl case, Trilio entries look like following. User need to add this data to his endpoint map file.
## Note that Trilio Datamover ssl port is '13784'

      TrilioDatamoverAdmin: {protocol: http, port: '8784', host: IP_ADDRESS}
      TrilioDatamoverInternal: {protocol: http, port: '8784', host: IP_ADDRESS}
      TrilioDatamoverPublic: {protocol: https, port: '13784', host: IP_ADDRESS}




# Switch to stack user
exit
